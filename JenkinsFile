pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    // Compile and package the code using Maven
                    echo 'Building the application...'
                    sh 'mvn clean package'
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    // Run unit and integration tests using Maven
                    echo 'Running Unit and Integration Tests...'
                    sh 'mvn test'
                }
            }
        }

        stage('Code Analysis') {
            steps {
                script {
                    // Analyze the code using SonarQube
                    echo 'Running Code Analysis with SonarQube...'
                    withSonarQubeEnv('SonarQube') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    // Perform security scan using OWASP Dependency-Check
                    echo 'Running Security Scan with OWASP Dependency-Check...'
                    sh 'mvn org.owasp:dependency-check-maven:check'
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    // Deploy the application to a staging environment using Ansible
                    echo 'Deploying to Staging Environment...'
                    sh 'ansible-playbook deploy_staging.yml'
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    // Run integration tests in the staging environment
                    echo 'Running Integration Tests on Staging Environment...'
                    sh 'mvn verify -Dtest=**/IntegrationTest*'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    // Deploy the application to a production environment using Ansible
                    echo 'Deploying to Production Environment...'
                    sh 'ansible-playbook deploy_production.yml'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully;;!'
        }

        failure {
            echo 'Pipeline failed...'
        }

        always {
            // Add email notification steps or other post-build actions if necessary
            echo 'Cleaning up...'
        }
    }
}
